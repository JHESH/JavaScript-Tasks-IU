# Ссылочные типы данных

**Объекты** и **массивы** являются *ссылочными* типами данных

Рассмотрим пример кода

```
"use strict";

let firstObj = null;
let secondObj = null;

firstObj = {login: "Maxim", age: 35};

console.log(firstObj.login);
console.log(firstObj.age);

secondObj = firstObj;
secondObj["login"] = "George";
secondObj["age"] = 18;

console.log(firstObj.login);
console.log(firstObj.age);
```

Запустим программу

```
node index.js
```

Результат работы программы

```
Maxim
35
George
18
```

Разберем написанный код

Вначале создаются две переменные *firstObj* и *secondObj*

Изначально они указывают в *null*

Потом создается объект с двумя полями (где поле login равняется Maxim, а поле age равняется 35)

Далее ссылка на созданный объект сохраняется в *firstObj*

Таким образом, теперь *firstObj* является **ссылкой** на участок памяти, в котором хранится объект

Далее поля объекта выводятся на экран. Доступ к объекту происходит через ссылку *firstObj*

После этого происходит выполнение команды

```
secondObj = firstObj;
```

Таким образом, переменная *secondObj* стала ссылаться на тот же участок памяти, что и переменная *firstObj*

В результате мы получаем, что *firstObj* и *secondObj* ссылаются на один и тот же объект

Далее мы начинаем изменять поля объекта. Доступ к объекту мы получаем через ссылку *secondObj*

В конце программы мы выводим измененные поля объекта на экран с помощью ссылки *firstObj*

Таким образом, необходимо сделать вывод: при присваивании ссылок друг другу идет **не** копирование данных. Происходит следующее: две ссылки указывают на один и тот же участок памяти, в котором хранится объект.



